<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.coteis.controller.user.UserControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2023-12-12T08:44:23" hostname="DESKTOP-OSVRIU0" time="0.237">
  <properties/>
  <testcase name="1. addUser() : 유저 사용자 등록" classname="org.coteis.controller.user.UserControllerTest" time="0.049"/>
  <testcase name="2. findAllUsers() : 유저 목록 조회" classname="org.coteis.controller.user.UserControllerTest" time="0.041"/>
  <testcase name="3. findUser() : 특정 사용자 조회" classname="org.coteis.controller.user.UserControllerTest" time="0.042"/>
  <testcase name="4. updateUser() : 특정 사용자 정보 업데이트" classname="org.coteis.controller.user.UserControllerTest" time="0.057"/>
  <testcase name="5. deleteUser() : 특정 사용자 삭제" classname="org.coteis.controller.user.UserControllerTest" time="0.044"/>
  <system-out><![CDATA[2023-12-12T17:44:23.007+09:00  INFO 29620 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.coteis.controller.user.UserControllerTest]: UserControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-12-12T17:44:23.025+09:00  INFO 29620 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.coteis.CoteisApplication for test class org.coteis.controller.user.UserControllerTest
Hibernate: 
    insert 
    into
        users
        (user_email, user_id, user_name, user_pw) 
    values
        (?, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/users
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"104"]
             Body = {"userName":"김혜승","userId":"hyeseung","userPw":"hyeseung!!","userEmail":"peace10200khs@gmail.com"}
    Session Attrs = {}

Handler:
             Type = org.coteis.controller.user.UserController
           Method = org.coteis.controller.user.UserController#addUser(AddUserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"userNo":8,"userName":"김혜승","userId":"hyeseung","userPw":"hyeseung!!","userEmail":"peace10200khs@gmail.com"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.user_no,
        u1_0.user_email,
        u1_0.user_id,
        u1_0.user_name,
        u1_0.user_pw 
    from
        users u1_0
Hibernate: 
    select
        u1_0.user_no,
        u1_0.user_email,
        u1_0.user_id,
        u1_0.user_name,
        u1_0.user_pw 
    from
        users u1_0 
    where
        u1_0.user_no=?
Hibernate: 
    select
        u1_0.user_no,
        u1_0.user_email,
        u1_0.user_id,
        u1_0.user_name,
        u1_0.user_pw 
    from
        users u1_0 
    where
        u1_0.user_no=?
Hibernate: 
    update
        users 
    set
        user_email=?,
        user_id=?,
        user_name=?,
        user_pw=? 
    where
        user_no=?

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/5
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"102"]
             Body = {"userName":"김혜승","userId":"hyeseung1","userPw":"hyeseung1!!","userEmail":"s2224@e-mirim.hs.kr"}
    Session Attrs = {}

Handler:
             Type = org.coteis.controller.user.UserController
           Method = org.coteis.controller.user.UserController#updateUser(Long, UpdateUserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"userNo":5,"userName":"김혜승","userId":"hyeseung1","userPw":"hyeseung1!!","userEmail":"s2224@e-mirim.hs.kr"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.user_no,
        u1_0.user_email,
        u1_0.user_id,
        u1_0.user_name,
        u1_0.user_pw 
    from
        users u1_0 
    where
        u1_0.user_no=?
Hibernate: 
    select
        a1_0.user_no,
        a1_0.article_no,
        a2_0.algorithm_no,
        a2_0.algorithm_name,
        a1_0.answer,
        a1_0.code_explain,
        a1_0.concept,
        a1_0.created_date,
        d1_0.difficulty_no,
        d1_0.difficulty_name,
        a1_0.input_example,
        l1_0.language_no,
        l1_0.language_name,
        a1_0.modified_date,
        a1_0.output_example,
        p1_0.previoustest_no,
        p1_0.previoustest_name,
        a1_0.speed,
        a1_0.test_explain,
        a1_0.title 
    from
        article a1_0 
    left join
        algorithm a2_0 
            on a2_0.algorithm_no=a1_0.algorithm_no 
    left join
        difficulty d1_0 
            on d1_0.difficulty_no=a1_0.difficulty_no 
    left join
        languages l1_0 
            on l1_0.language_no=a1_0.language_no 
    left join
        previoustest p1_0 
            on p1_0.previoustest_no=a1_0.previoustest_no 
    where
        a1_0.user_no=?
Hibernate: 
    select
        c1_0.user_no,
        c1_0.comment_id,
        a1_0.article_no,
        a2_0.algorithm_no,
        a2_0.algorithm_name,
        a1_0.answer,
        a1_0.code_explain,
        a1_0.concept,
        a1_0.created_date,
        d1_0.difficulty_no,
        d1_0.difficulty_name,
        a1_0.input_example,
        l1_0.language_no,
        l1_0.language_name,
        a1_0.modified_date,
        a1_0.output_example,
        p1_0.previoustest_no,
        p1_0.previoustest_name,
        a1_0.speed,
        a1_0.test_explain,
        a1_0.title,
        u1_0.user_no,
        u1_0.user_email,
        u1_0.user_id,
        u1_0.user_name,
        u1_0.user_pw,
        c1_0.content,
        c1_0.created_date,
        c1_0.modified_date 
    from
        comment c1_0 
    left join
        article a1_0 
            on a1_0.article_no=c1_0.article_no 
    left join
        algorithm a2_0 
            on a2_0.algorithm_no=a1_0.algorithm_no 
    left join
        difficulty d1_0 
            on d1_0.difficulty_no=a1_0.difficulty_no 
    left join
        languages l1_0 
            on l1_0.language_no=a1_0.language_no 
    left join
        previoustest p1_0 
            on p1_0.previoustest_no=a1_0.previoustest_no 
    left join
        users u1_0 
            on u1_0.user_no=a1_0.user_no 
    where
        c1_0.user_no=?
Hibernate: 
    delete 
    from
        users 
    where
        user_no=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
